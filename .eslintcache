[{"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_user\\userRegistration.js":"1","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\components\\home\\homeLogin.js":"2","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\frontPage.js":"3","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\context\\UserContext.js":"4","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_admin\\TrainingNavigator.js":"5","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_admin\\trainingsList.js":"6","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_user\\trainingsList.js":"7","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\components\\requests\\oldRequest\\tableOne.js":"8","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\components\\check\\compCheck.js":"9"},{"size":19795,"mtime":1622605982806,"results":"10","hashOfConfig":"11"},{"size":6040,"mtime":1622620025492,"results":"12","hashOfConfig":"11"},{"size":5544,"mtime":1622613606352,"results":"13","hashOfConfig":"11"},{"size":4888,"mtime":1622608176683,"results":"14","hashOfConfig":"11"},{"size":1511,"mtime":1622611930143,"results":"15","hashOfConfig":"11"},{"size":12812,"mtime":1622611752936,"results":"16","hashOfConfig":"11"},{"size":11335,"mtime":1622614012568,"results":"17","hashOfConfig":"11"},{"size":30699,"mtime":1622619617230,"results":"18","hashOfConfig":"11"},{"size":38664,"mtime":1622619694765,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bhkcv4",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_user\\userRegistration.js",[],"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\components\\home\\homeLogin.js",[],"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\frontPage.js",[],"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\context\\UserContext.js",[],"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_admin\\TrainingNavigator.js",[],"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_admin\\trainingsList.js",["39","40","41"],"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\pages\\training\\training_user\\trainingsList.js",["42","43"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axiosbase'\r\nimport getLoggedUserToken from 'components/utilities/getLoggedUserToken'\r\nimport AlertContext from 'components/utilities/alertContext'\r\nimport FilePreviewContext from 'components/utilities/filePreviewContext'\r\nimport { useHistory } from 'react-router'\r\nimport { Transition, animated } from 'react-spring/renderprops'\r\nimport CalendarSVG from 'assets/svgComponents/calendarSVG'\r\nimport ClockSVG from 'assets/svgComponents/clockSVG'\r\nimport LocationMarkerSVG from 'assets/svgComponents/locationMarker'\r\nimport UsersSVG from 'assets/svgComponents/usersSVG'\r\nimport LibrarySVG from 'assets/svgComponents/librarySVG'\r\nimport { Link } from 'react-router-dom'\r\nimport ModalWindow from 'components/modal_window/modalWindow'\r\nimport ExclamationSVG from 'assets/svgComponents/exclamationSVG'\r\n\r\nexport default function TrainingsList() {\r\n   const [trainings, setTrainings] = useState([])\r\n\r\n   const AlertCtx = useContext(AlertContext)\r\n   const FilePreviewCtx = useContext(FilePreviewContext)\r\n\r\n   useEffect(() => {\r\n      axios.get('trainings', {\r\n         params: { status: 'active' },\r\n      }).then(res => {\r\n         setTrainings(res.data.data)\r\n      }).catch(err => {\r\n         AlertCtx.setAlert({ open: true, variant: 'error', msg: 'Алдаа гарлаа. Сургалтуудыг татаж чадсангүй.' })\r\n      })\r\n   }, [])\r\n\r\n   const handleDownloadFile = (id) => {\r\n      axios.get(`attach-files/${id}`, {\r\n         headers: { Authorization: getLoggedUserToken() },\r\n         responseType: 'blob',\r\n      }).then(res => {\r\n         const URL = window.URL.createObjectURL(res.data)\r\n         FilePreviewCtx.setFile({ open: true, src: URL })\r\n      }).catch(err => {\r\n         AlertCtx.setAlert({ open: true, variant: 'error', msg: 'Файлыг татахад алдаа гарлаа.' })\r\n      })\r\n   }\r\n\r\n   const [modalOpenIsFull, setModalOpenIsFull] = useState(false)\r\n\r\n   useEffect(() => {\r\n      const timer = setTimeout(() => {\r\n         if (modalOpenIsFull === true) {\r\n            setModalOpenIsFull(false)\r\n         }\r\n      }, 3000)\r\n      return () => clearTimeout(timer)\r\n   }, [modalOpenIsFull])\r\n\r\n   return (\r\n      <div className=\"tw-text-gray-700 tw-text-sm tw-w-full tw-p-2 tw-pb-12\">\r\n         <div className={titleClass}>\r\n            Зарлагдсан сургалтууд\r\n         </div>\r\n\r\n         {/* <table className=\"\">\r\n            <thead>\r\n               <tr>\r\n                  {tableHeaders.map(header =>\r\n                     <th className=\"tw-border tw-border-gray-400\" key={header}>\r\n                        {header}\r\n                     </th>\r\n                  )}\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {trainings.map(training =>\r\n                  <tr className=\"\" key={training.id}>\r\n                     {rowFields.map(field => {\r\n                        switch (field) {\r\n                           case 'module_file':\r\n                              return <td className=\"tw-border tw-border-gray-400\" key={field}>\r\n                                 <button\r\n                                    className=\"tw-w-32 tw-truncate focus:tw-outline-none tw-rounded tw-px-2 tw-py-0.5 tw-bg-blue-800 active:tw-bg-blue-700 tw-transition-colors tw-text-white\"\r\n                                    onClick={() => handleDownloadFile(training.module_file?.id)}\r\n                                    title={training.module_file?.name}>\r\n                                    {training.module_file?.name}\r\n                                 </button>\r\n                              </td>\r\n                           case 'start_time':\r\n                              return <td className=\"tw-border tw-border-gray-400\" key={field}>\r\n                                 {training.start_time} - {training.end_time}\r\n                              </td>\r\n                           case 'registerButton':\r\n                              return <td className=\"tw-border tw-border-gray-400\" key={field}>\r\n                                 <button className=\"focus:tw-outline-none tw-rounded tw-px-2 tw-py-0.5 tw-bg-blue-800 active:tw-bg-blue-700 tw-transition-colors tw-text-white\" onClick={() => navRegistration(training.id)}>\r\n                                    Бүртгүүлэх\r\n                                 </button>\r\n                              </td>\r\n                           default:\r\n                              return <td className=\"tw-border tw-border-gray-400\" key={field}>\r\n                                 {training[field]}\r\n                              </td>\r\n                        }\r\n                     })}\r\n                  </tr>\r\n               )}\r\n            </tbody>\r\n         </table> */}\r\n\r\n         {trainings.map(training =>\r\n            <TrainingCard training={training} key={training.id} handleDownloadFile={handleDownloadFile} setModalOpenIsFull={setModalOpenIsFull} />\r\n         )}\r\n         \r\n         {/* {[{ ...trainings[0], training_name: 'Экпортыг дэмжих төслийн ерөнхий сургалт', registeredUserCount: 25 }].map(training =>\r\n            <TrainingCard training={training} key={training.id} handleDownloadFile={handleDownloadFile} setModalOpenIsFull={setModalOpenIsFull} />\r\n         )} */}\r\n\r\n         <ModalWindow modalOpen={modalOpenIsFull} setModalOpen={setModalOpenIsFull} modalAppend=\"tw-p-5\">\r\n            <div className=\"tw-px-4 tw-pt-4 tw-pb-2 tw-font-medium tw-text-base tw-flex tw-items-center tw-justify-center\">\r\n               Уучлаарай\r\n               <ExclamationSVG className=\"tw-w-6 tw-h-6 tw-text-red-500 tw-ml-1\" />\r\n            </div>\r\n            <div className=\"tw-font-medium tw-py-4 tw-px-4\">\r\n               Бүртгэл дүүрсэн байна.\r\n            </div>\r\n         </ModalWindow>\r\n      </div>\r\n   )\r\n}\r\n\r\n// const tableHeaders = [\r\n//    'Сургалтын нэр',\r\n//    'Сургалтын агуулга, файлаар',\r\n//    'Сургалтын төрөл',\r\n//    'Сургалтын хэлбэр',\r\n//    'Сургалт эхлэх өдөр',\r\n//    'Сургалт дуусах өдөр',\r\n//    'Сургалтын цаг',\r\n//    'Сургалт зохион байгуулах байгууллага',\r\n//    'Байршил, сургалт зохион байгуулагдах хаяг',\r\n//    'Оролцогчдын тоо',\r\n//    'Сургалтын цар хүрээ',\r\n//    'Бүртгүүлэх',\r\n// ]\r\n\r\n// const rowFields = [\r\n//    'training_name',\r\n//    'module_file',\r\n//    'training_type',\r\n//    'training_method',\r\n//    'start_date',\r\n//    'end_date',\r\n//    'start_time',\r\n//    'organizer',\r\n//    'location',\r\n//    'participant_number',\r\n//    'scope',\r\n//    'registerButton',\r\n// ]\r\n\r\nconst TrainingCard = ({ training, handleDownloadFile, setModalOpenIsFull }) => {\r\n   const [expanded, setExpanded] = useState(false)\r\n\r\n   const history = useHistory()\r\n\r\n   const navRegistration = (id, e) => {\r\n      e.stopPropagation()\r\n\r\n      if (isFull) {\r\n         return setModalOpenIsFull(true)\r\n      }\r\n      history.push(`/trainings/${id}/registration`)\r\n   }\r\n\r\n   const handleViewFile = (e) => {\r\n      e.stopPropagation()\r\n      handleDownloadFile(training.module_file.id)\r\n   }\r\n\r\n   const isFull = training.registeredUserCount >= training.participant_number\r\n\r\n   return (\r\n      <div className=\"tw-cursor-pointer tw-mt-4 tw-rounded-md tw-shadow-md tw-p-4\" onClick={() => setExpanded(prev => !prev)}>\r\n         <div className=\"tw-flex\">\r\n            <div className=\"tw-flex-grow\">\r\n               <div className=\"tw-flex tw-items-center tw-text-blue-500 tw-font-medium tw-text-15px\">\r\n                  {training.training_name}\r\n               </div>\r\n               <div className=\"tw-flex tw-items-center tw-font-medium tw-mt-1\">\r\n                  <UsersSVG className={`tw-w-4 tw-h-4 tw-mr-2 ${isFull ? 'tw-text-red-500' : 'tw-text-green-500'} tw-transition-colors`} strokeWidth={2.4} />\r\n                  {training.registeredUserCount}/{training.participant_number}\r\n               </div>\r\n            </div>\r\n            <button className={`tw-flex-shrink-0 tw-self-end ${buttonClass}`} onClick={e => navRegistration(training.id, e)}>\r\n               Бүртгүүлэх\r\n            </button>\r\n         </div>\r\n\r\n         <Transition\r\n            items={expanded}\r\n            from={{ height: 0 }}\r\n            enter={{ height: 'auto' }}\r\n            leave={{ height: 0 }}>\r\n            {item => item && (anims =>\r\n               <animated.div className=\"tw-overflow-hidden tw-text-13px tw-font-medium\" style={anims}>\r\n                  <div className=\"tw-pt-1 tw-pl-6\">\r\n                     <button className=\"focus:tw-outline-none tw-font-medium tw-border-b tw-border-gray-600 tw-transition-colors tw-transition-shadow hover:tw-shadow-md tw-text-blue-500 active:tw-text-blue-600\" onClick={handleViewFile}>\r\n                        Сургалтын агуулгыг харах\r\n                     </button>\r\n                  </div>\r\n                  <div className=\"tw-mt-1 tw-pl-6\">\r\n                     <span className=\"tw-mr-2 tw-border-b tw-border-gray-600\">Төрөл:</span>\r\n                     {training.training_type}\r\n                  </div>\r\n                  <div className=\"tw-mt-1 tw-pl-6\">\r\n                     <span className=\"tw-mr-2 tw-border-b tw-border-gray-600\">Орчин:</span>\r\n                     {training.training_method}\r\n                  </div>\r\n                  <div className=\"tw-flex tw-items-center tw-mt-1\">\r\n                     <CalendarSVG className=\"tw-w-5 tw-h-5 tw-mr-1\" />\r\n                     <span className=\"\">{training.start_date}</span>\r\n                     <span className=\"tw-mx-1\">–</span>\r\n                     <span className=\"\">{training.end_date}</span>\r\n                  </div>\r\n                  <div className=\"tw-flex tw-items-center tw-mt-1\">\r\n                     <ClockSVG className=\"tw-w-5 tw-h-5 tw-mr-1\" />\r\n                     <span className=\"\">{training.start_time?.slice(0, 5)}</span>\r\n                     <span className=\"tw-mx-1\">–</span>\r\n                     <span className=\"\">{training.end_time?.slice(0, 5)}</span>\r\n                  </div>\r\n                  <div className=\"tw-flex tw-items-center tw-mt-1\">\r\n                     <LibrarySVG className=\"w-5 tw-h-5 tw-mr-1\" />\r\n                     {training.trainerOrganization?.organization_name}\r\n                  </div>\r\n                  <div className=\"tw-flex tw-items-center tw-mt-1\">\r\n                     <LocationMarkerSVG className=\"w-5 tw-h-5 tw-mr-1\" />\r\n                     {training.location}\r\n                  </div>\r\n                  <div className=\"tw-mt-1 tw-pl-6\">\r\n                     {training.scope}\r\n                  </div>\r\n               </animated.div>\r\n            )}\r\n         </Transition>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const titleClass = 'tw-text-sm tw-font-medium tw-uppercase tw-p-1 tw-border-b tw-border-gray-400'\r\n\r\nexport const buttonClass = 'tw-rounded tw-border tw-border-blue-500 tw-text-xs tw-text-blue-500 tw-px-2.5 tw-py-1 focus:tw-outline-none active:tw-border-blue-700 active:tw-text-blue-700 tw-transition-colors tw-transition-shadow hover:tw-shadow-md tw-font-medium'\r\n","C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\components\\requests\\oldRequest\\tableOne.js",["44","45","46","47","48","49","50","51","52","53","54"],"C:\\Users\\yondo\\Desktop\\pps\\edp-pimis-web\\src\\components\\check\\compCheck.js",["55"],{"ruleId":"56","severity":1,"message":"57","line":16,"column":21,"nodeType":"58","messageId":"59","endLine":16,"endColumn":32},{"ruleId":"56","severity":1,"message":"60","line":17,"column":25,"nodeType":"58","messageId":"59","endLine":17,"endColumn":40},{"ruleId":"61","severity":1,"message":"62","line":26,"column":7,"nodeType":"63","endLine":26,"endColumn":9,"suggestions":"64"},{"ruleId":"56","severity":1,"message":"65","line":13,"column":10,"nodeType":"58","messageId":"59","endLine":13,"endColumn":14},{"ruleId":"61","severity":1,"message":"66","line":31,"column":7,"nodeType":"63","endLine":31,"endColumn":9,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":34,"column":27,"nodeType":"70","messageId":"71","endLine":34,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":36,"column":49,"nodeType":"70","messageId":"71","endLine":36,"endColumn":51},{"ruleId":"61","severity":1,"message":"72","line":41,"column":7,"nodeType":"63","endLine":41,"endColumn":26,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"69","line":48,"column":31,"nodeType":"70","messageId":"71","endLine":48,"endColumn":33},{"ruleId":"68","severity":1,"message":"69","line":59,"column":26,"nodeType":"70","messageId":"71","endLine":59,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":69,"column":48,"nodeType":"70","messageId":"71","endLine":69,"endColumn":50},{"ruleId":"68","severity":1,"message":"69","line":69,"column":70,"nodeType":"70","messageId":"71","endLine":69,"endColumn":72},{"ruleId":"68","severity":1,"message":"69","line":83,"column":50,"nodeType":"70","messageId":"71","endLine":83,"endColumn":52},{"ruleId":"68","severity":1,"message":"69","line":83,"column":73,"nodeType":"70","messageId":"71","endLine":83,"endColumn":75},{"ruleId":"74","severity":1,"message":"75","line":210,"column":220,"nodeType":"76","endLine":210,"endColumn":246},{"ruleId":"74","severity":1,"message":"75","line":211,"column":178,"nodeType":"76","endLine":211,"endColumn":204},{"ruleId":"61","severity":1,"message":"77","line":51,"column":6,"nodeType":"63","endLine":51,"endColumn":19,"suggestions":"78"},"no-unused-vars","'setUserRole' is assigned a value but never used.","Identifier","unusedVar","'setTrainerOrgId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'trainerOrgId' and 'userRole'. Either include them or remove the dependency array.","ArrayExpression",["79"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'AlertCtx'. Either include it or remove the dependency array.",["80"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.initialDate' and 'props.initialName'. Either include them or remove the dependency array. If 'setDname' needs the current value of 'props.initialName', you can also switch to useReducer instead of useState and read 'props.initialName' in the reducer.",["81"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'param'. Either include it or remove the dependency array.",["82"],{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [trainerOrgId, userRole]",{"range":"91","text":"92"},"Update the dependencies array to be: [AlertCtx]",{"range":"93","text":"94"},"Update the dependencies array to be: [props.initialData, props.initialDate, props.initialName]",{"range":"95","text":"96"},"Update the dependencies array to be: [param, updateMount]",{"range":"97","text":"98"},[1303,1305],"[trainerOrgId, userRole]",[1393,1395],"[AlertCtx]",[2027,2046],"[props.initialData, props.initialDate, props.initialName]",[2689,2702],"[param, updateMount]"]