[{"C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\pages\\urgudul\\urgudul_a\\form_a_21.js":"1","C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\components\\requests\\oldRequest\\deitals\\tableThreeDetails.js":"2","C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\components\\home\\signup.js":"3","C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\components\\requests\\oldRequest\\tableThree.js":"4"},{"size":19188,"mtime":1614853405074,"results":"5","hashOfConfig":"6"},{"size":19812,"mtime":1614853649069,"results":"7","hashOfConfig":"6"},{"size":32533,"mtime":1614853650988,"results":"8","hashOfConfig":"6"},{"size":13424,"mtime":1614853658121,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ukfijx",{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\pages\\urgudul\\urgudul_a\\form_a_21.js",["19"],"C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\components\\requests\\oldRequest\\deitals\\tableThreeDetails.js",["20","21","22","23","24"],"C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\components\\home\\signup.js",["25","26","27","28","29","30","31"],"C:\\Users\\Munkhbayar\\Desktop\\PPS\\edp-pimis-web\\src\\components\\requests\\oldRequest\\tableThree.js",["32","33","34","35"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport TableThreeDetails from './deitals/tableThreeDetails'\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport styled from 'styled-components'\r\nimport { fontFamily, textColor, ColorRgb,fontSize,PrevBtn,NextBtn,InputStyle } from '../../theme';\r\nimport {FiUserCheck} from 'react-icons/fi'\r\nimport {MdDateRange} from 'react-icons/md'\r\nimport {BsArrowRightShort} from 'react-icons/bs'\r\nimport {AiOutlineSend} from 'react-icons/ai'\r\nimport HelperContext from '../../../context/HelperContext'\r\nimport axios from '../../../axiosbase'\r\nimport AccessToken from '../../../context/accessToken'\r\n\r\nconst today = new Date(); const month = (today.getMonth()+1); const day = today.getDate();\r\nconst Currentdate = today.getFullYear() + '-' + (month.toString().length ===1?'0'+month : month) + '-' + (day.toString().length ===1?'0'+day : day);\r\n\r\nfunction TableThree(props) {\r\n    const helperContext = useContext(HelperContext);\r\n    const [ spnBtn, setSpnBtn ] = useState(false);\r\n    const [opacity2, setOpacity2] = useState(\"0\");\r\n    const [FinalErrorText, setFinalErrorText] = useState(\"\");\r\n    const [Dname, setDname ] = useState(null);\r\n    const [Ddate, setDdate] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        if(props.initialName){\r\n            setDname(props.initialName);\r\n            setDdate(props.initialDate);\r\n        }\r\n    },[props.initialName])\r\n\r\n    const changeNameHandle = (event) =>{\r\n        setDname(event.target.value);\r\n    }\r\n    const changeDateHandle = (event) =>{\r\n        setDdate(event.target.value);\r\n    }\r\n\r\n    const clickHandles = () => {\r\n        let finalOne = {};\r\n        let finalEnd = {};\r\n        let rs2 = document.querySelectorAll(\".GetItemAdd33\");\r\n        let arr2 = Array.from(rs2);\r\n        let finalOne2 = [];\r\n\r\n        // const tableCondition = [];\r\n        arr2.map((el,i)=>{\r\n            const Lala = {}\r\n            let rs2 = document.querySelectorAll(`.PPPS${i + 1}`);\r\n            let arr23 = Array.from(rs2);\r\n            arr23.map((el,i)=>{\r\n                // if(el.value !== \"\"){\r\n                    let field = el.name;\r\n                    let value = el.value;\r\n                    if(props.initialName){\r\n                        Lala[\"id\"] = el.id;\r\n                    }\r\n                    Lala[field] = value;\r\n                // }\r\n            });\r\n            // tableCondition.push(Lala);\r\n            finalOne2.push(Lala);\r\n        });\r\n        let confirmNull = document.getElementById(\"GetcheckBtnn3\").checked;\r\n\r\n        let rs4 = document.querySelectorAll(\".getUserInp3\");\r\n        let arr4 = Array.from(rs4);\r\n        let userInp = {};\r\n\r\n        arr4.map(el=>{let field = el.name; let value = el.value; if(value===\"\"){ el.classList += \" red\"; }else{  el.classList =- \" red\";  el.classList += \" getUserInp3\"; };  userInp[field] = value; });\r\n        let confirm = document.getElementById(\"GetcheckBtn3\").checked;\r\n        if(confirmNull===false){\r\n            if(finalOne2[0].pdate !== \"\"){\r\n                finalOne[\"request\"] = finalOne2;\r\n                finalEnd[\"na3\"] = 2;\r\n            }else{\r\n                finalOne[\"na3\"] = 1;\r\n                finalOne[\"request\"] = [];\r\n            }\r\n        }else{\r\n            finalEnd[\"na3\"] = 1;\r\n            finalOne[\"request\"] = [];\r\n        }\r\n        \r\n        finalOne[\"name\"] = userInp.name; finalOne[\"date\"] = userInp.date; finalEnd[\"PPS3\"] = finalOne;\r\n\r\n        console.log(finalEnd, \"final\");\r\n\r\n        if(userInp.name === \"\" || userInp.date === \"\"){\r\n            setOpacity2(\"1\");\r\n            setFinalErrorText(\"Хүсэлт гаргагчийн мэдүүлэг хэсэгийг бөгөлнө үү\");\r\n        }else if(confirm === false){\r\n            setOpacity2(\"1\");\r\n            setFinalErrorText(\"Та үнэн зөв бөгөлсөн бол CHECK дарна уу\");\r\n        }else{\r\n            setSpnBtn(true);\r\n            if(props.initialName){\r\n                axios.put(`pps-request/${props.id}`, finalEnd, {headers: {Authorization: props.token}}).then((res)=>{\r\n                    helperContext.alertText('green', \"Амжилттай \", true); setSpnBtn(false);\r\n                    helperContext.StyleComp(\"-300%\", \"-200%\", \"-100%\", \"0%\", \"100%\",\"200%\"); scroll.scrollTo(0);\r\n                  }).catch((err)=>{console.log(err, \"err\"); setSpnBtn(false); helperContext.alertText('orange', \"Алдаа гарлаа\", true);  });\r\n            }else{\r\n                axios.put(`pps-request/${helperContext.tableId}`, finalEnd, {headers:{ Authorization:AccessToken()}} ).then((res)=>{\r\n                    setSpnBtn(false); helperContext.alertText('green', \"Амжилттай хадаглалаа\", true); helperContext.StyleComp(\"-300%\", \"-200%\", \"-100%\", \"0%\", \"100%\",\"200%\");scroll.scrollTo(0);\r\n                  }).catch((err)=>{setSpnBtn(false); helperContext.alertText('orange', \"Алдаа гарлаа\", true);  });\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Component3 className=\"container\">\r\n            {props.initialName? <TableThreeDetails na3={props.na3} initialData={props.initialData} />: <TableThreeDetails na3={props.na3} initialData={null} />} \r\n            <div className=\"UserRequestPar\">\r\n                        <div className=\"Title\">Хүсэлт гаргагчийн мэдүүлэг :</div>\r\n                        <div className=\"description\">Би/Бид энэхүү маягтад өгсөн мэдээлэл нь үнэн зөв гэдгийг баталж байгаа бөгөөд худал, буруу мэдээлэл өгсөн нь санхүүгийн дэмжлэгийн шийдвэрт нөлөөлнө эсвэл санхүүгийн дэмжлэгийн шийдвэр, гэрээг цуцлах үндэслэл болно гэдгийг хүлээн зөвшөөрч байна. </div>\r\n                        <div className=\"formOneParent\">\r\n                            <div className=\"inputPar\">\r\n                                <div className=\"inpChild\">\r\n                                    <div className=\"labels\"><span>Мэдүүлэг бөглөгчийн нэр :</span> </div>\r\n                                    <div className=\"name\"> <FiUserCheck />\r\n                                        <InputStyle className=\"newInp\">\r\n                                            {Dname? <input type=\"input\" onChange={changeNameHandle} value={Dname} className=\"getUserInp3 LoginInpName form__field\" placeholder=\"нэр...\" name=\"name\" required />\r\n                                            :<input type=\"input\" className=\"getUserInp3 LoginInpName form__field\" placeholder=\"нэр...\" name=\"name\" required />  }\r\n                                            <div className=\"line\"></div>\r\n                                        </InputStyle>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"NextChild\">\r\n                                    <div className=\"inpChild next\">\r\n                                        <div className=\"labels\"><span> Огноо :</span></div>\r\n                                        <div className=\"name\"> <MdDateRange />\r\n                                            <InputStyle className=\"newInp\">\r\n                                                {Dname ?  <input type=\"date\" onChange={changeDateHandle} value={Ddate} max={Currentdate} placeholder=\"өдөр-сар-жил\" className=\"getUserInp3 LoginInpName form__field\" name=\"date\" required />\r\n                                                        : <input type=\"date\" max={Currentdate} placeholder=\"өдөр-сар-жил\" className=\"getUserInp3 LoginInpName form__field\" name=\"date\" required /> }\r\n                                                <div className=\"line\"></div>\r\n                                            </InputStyle>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    \r\n                                    <div className=\"inpChild next\">\r\n                                        <div className=\"labels\"><span> Та үнэн зөв бөгөлсөн эсэхээ баталгаажуулна уу : </span></div>\r\n                                            <div className=\"name\"> <BsArrowRightShort />\r\n                                                <InputStyle className=\"newInp\">\r\n                                                    <input id=\"GetcheckBtn3\" className=\"checkBtn\" type=\"checkbox\" name=\"check\" />\r\n                                                </InputStyle>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{opacity:`${opacity2}`}} className=\"errtext\">{FinalErrorText}</div>\r\n                        <div className=\"buttonPar\">\r\n                           {props.initialName? (<PrevBtn id=\"myInput\" onClick={()=> { scroll.scrollTo(0); helperContext.StyleComp(\"-100%\", \"0%\", \"100%\", \"200%\", \"300%\",\"400%\")}} className=\"SubmitButton\" type=\"button\"><div className=\"flexchild\"><AiOutlineSend/></div>Өмнөх хуудас</PrevBtn>) : null } \r\n                            <NextBtn onClick={clickHandles} style={spnBtn===false? { width:\"40%\" }:{ width:\"10%\" }} className=\"SubmitButton\" type=\"button\">{spnBtn===false?(<> Дараагийн хуудас <div className=\"flexchild\"><AiOutlineSend/><AiOutlineSend className=\"hide\" /> <AiOutlineSend className=\"hide1\" /></div></> ): <img src=\"/gif1.gif\" alt=\"spin\" />  }</NextBtn>\r\n                        </div>\r\n            </div>\r\n        </Component3>\r\n    )\r\n}\r\n\r\nexport default TableThree\r\n\r\n\r\nconst Component3 = styled.div`\r\n    color:rgba(${textColor},0.9);\r\n    transition: all 0.5s ease-out;\r\n    font-family: ${fontFamily};\r\n    margin-bottom:600px;\r\n    font-size:${fontSize} !important;\r\n  \r\n\r\n\r\n    .UserRequestPar{\r\n        box-shadow:1px 1px 10px -5px;\r\n        border-radius:6px;\r\n        background-color:white;\r\n        padding:15px 40px;\r\n        .Title{\r\n            font-size:16px;  \r\n            font-weight:500;\r\n            margin-bottom:10px;\r\n        }\r\n        .description{\r\n            margin-bottom:20px;\r\n        }\r\n\r\n        .inputPar{\r\n           border-top:1px solid rgba(${ColorRgb},0.5);\r\n           border-radius:8px;\r\n           display:flex;\r\n           flex-direction:column;\r\n           align-items:flex;\r\n           justify-content:center;\r\n           padding-top:15px;\r\n\r\n           .NextChild{\r\n               display:flex;\r\n               flex-direction:row;\r\n               align-items:center;\r\n               justify-content:space-between;\r\n               .next{\r\n                   width:40%;\r\n                   .checkBtn{\r\n                    cursor:pointer;\r\n                    width:25px;\r\n                    height:25px;\r\n                  }\r\n               }\r\n            }\r\n           .inpChild{\r\n               margin:12px 0px;\r\n               display:flex;\r\n               flex-direction:column;\r\n               .labels{\r\n                   display:flex;\r\n                   flex-direction:row;\r\n                   justify-content:space-between;\r\n                   font-size:14px;\r\n                   span{\r\n                       color:rgba(${textColor},.9);\r\n                       font-weight:500;\r\n                   }\r\n                  \r\n               }\r\n               .name{\r\n                padding:12px 0px;\r\n                display:flex;\r\n                flex-direction:row;\r\n                align-items:center;\r\n                justify-content:flex-end;\r\n                width:100%;\r\n                svg{\r\n                  color:rgba(${ColorRgb},0.7);\r\n                  font-size:24px;\r\n                  margin-right:15px;\r\n                }\r\n                .newInp{\r\n                  font-size:14px;\r\n                  width:100%;\r\n                }\r\n\r\n                .form__group{\r\n                  position:relative;\r\n                  padding: 8px 0 0;\r\n                  margin-top: 0px;\r\n                  width: 100%;\r\n                }\r\n              }\r\n               \r\n           }\r\n        }\r\n        .errtext{\r\n            transition:all 0.4s ease;\r\n            text-align:center;\r\n            background-color: #f6c343;\r\n            border-radius:5px;\r\n            font-size:15px !important;\r\n            font-weight:400;\r\n            color:black !important;\r\n            line-height:34px;\r\n            padding:0px 20px;\r\n          }\r\n        .buttonPar{\r\n            margin:10px 0px;\r\n            display:flex;\r\n            flex-direction:row;\r\n            align-items:center;\r\n            justify-content:space-between;\r\n                \r\n              \r\n          }\r\n    }\r\n    @media only screen and (max-width:786px){\r\n        .UserRequestPar{\r\n            .buttonPar{\r\n                flex-direction:column;\r\n                .SubmitButton {\r\n                    width:100%;\r\n                }\r\n            }\r\n            .inputPar{\r\n                .NextChild{\r\n                    flex-direction: column !important;\r\n                    .next{\r\n                        width:100%;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n",{"ruleId":"36","severity":1,"message":"37","line":45,"column":8,"nodeType":"38","endLine":45,"endColumn":28,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"40","line":28,"column":8,"nodeType":"38","endLine":28,"endColumn":27,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":32,"column":37,"nodeType":"44","messageId":"45","endLine":32,"endColumn":39},{"ruleId":"42","severity":1,"message":"43","line":41,"column":37,"nodeType":"44","messageId":"45","endLine":41,"endColumn":39},{"ruleId":"42","severity":1,"message":"43","line":50,"column":37,"nodeType":"44","messageId":"45","endLine":50,"endColumn":39},{"ruleId":"42","severity":1,"message":"43","line":58,"column":37,"nodeType":"44","messageId":"45","endLine":58,"endColumn":39},{"ruleId":"46","severity":1,"message":"47","line":14,"column":62,"nodeType":"48","messageId":"49","endLine":14,"endColumn":63,"suggestions":"50"},{"ruleId":"36","severity":1,"message":"51","line":50,"column":16,"nodeType":"44","endLine":55,"endColumn":6},{"ruleId":"42","severity":1,"message":"43","line":69,"column":28,"nodeType":"44","messageId":"45","endLine":69,"endColumn":30},{"ruleId":"52","severity":1,"message":"53","line":91,"column":13,"nodeType":"54","endLine":91,"endColumn":16},{"ruleId":"52","severity":1,"message":"55","line":184,"column":33,"nodeType":"54","endLine":184,"endColumn":84},{"ruleId":"56","severity":1,"message":"57","line":184,"column":41,"nodeType":"48","messageId":"58","endLine":184,"endColumn":62},{"ruleId":"59","severity":1,"message":"60","line":282,"column":218,"nodeType":"54","endLine":282,"endColumn":241},{"ruleId":"36","severity":1,"message":"61","line":30,"column":7,"nodeType":"38","endLine":30,"endColumn":26,"suggestions":"62"},{"ruleId":"42","severity":1,"message":"43","line":47,"column":24,"nodeType":"44","messageId":"45","endLine":47,"endColumn":26},{"ruleId":"42","severity":1,"message":"43","line":51,"column":29,"nodeType":"44","messageId":"45","endLine":51,"endColumn":31},{"ruleId":"42","severity":1,"message":"43","line":70,"column":20,"nodeType":"44","messageId":"45","endLine":70,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UrgudulCtx.data.clusters'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has a missing dependency: 'initialList'. Either include it or remove the dependency array.",["64"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["65","66"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'props.initialDate'. Either include it or remove the dependency array. If 'setDdate' needs the current value of 'props.initialDate', you can also switch to useReducer instead of useState and read 'props.initialDate' in the reducer.",["67"],{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},{"messageId":"72","fix":"73","desc":"74"},{"messageId":"75","fix":"76","desc":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [UrgudulCtx.data.clusters, UrgudulCtx.data.id]",{"range":"80","text":"81"},"Update the dependencies array to be: [initialList, props.initialData]",{"range":"82","text":"83"},"removeEscape",{"range":"84","text":"85"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"86","text":"87"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.initialDate, props.initialName]",{"range":"88","text":"89"},[1833,1853],"[UrgudulCtx.data.clusters, UrgudulCtx.data.id]",[1080,1099],"[initialList, props.initialData]",[623,624],"",[623,623],"\\",[1412,1431],"[props.initialDate, props.initialName]"]