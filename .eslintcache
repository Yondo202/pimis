[{"E:\\EDP fullstack\\edp-pimis-web\\src\\components\\admin\\contents\\monitoring\\mainReports\\progressReport\\ProgressReport.js":"1","E:\\EDP fullstack\\edp-pimis-web\\src\\axiosbase.js":"2","E:\\EDP fullstack\\edp-pimis-web\\src\\pages\\training\\training_user\\userRegistration.js":"3"},{"size":33305,"mtime":1638846888125,"results":"4","hashOfConfig":"5"},{"size":697,"mtime":1638846913675,"results":"6","hashOfConfig":"5"},{"size":23415,"mtime":1638847628790,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wrb82o",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"E:\\EDP fullstack\\edp-pimis-web\\src\\components\\admin\\contents\\monitoring\\mainReports\\progressReport\\ProgressReport.js",[],"E:\\EDP fullstack\\edp-pimis-web\\src\\axiosbase.js",[],"E:\\EDP fullstack\\edp-pimis-web\\src\\pages\\training\\training_user\\userRegistration.js",["15","16","17","18","19","20","21","22","23"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport axios from 'axiosbase'\r\nimport FormInline from 'components/urgudul_components/formInline'\r\nimport FormOptions from 'components/urgudul_components/formOptions'\r\nimport TreeSelect from 'components/urgudul_components/treeSelect'\r\nimport FormRichText from 'components/urgudul_components/formRichText'\r\nimport { animated, Transition } from 'react-spring/renderprops'\r\nimport FileCard from 'pages/attachments/fileCard'\r\nimport FileCardAdd from 'pages/attachments/fileCardAdd'\r\nimport getLoggedUserToken from 'components/utilities/getLoggedUserToken'\r\nimport FilePreviewContext from 'components/utilities/filePreviewContext'\r\nimport AlertContext from 'components/utilities/alertContext'\r\nimport { useParams } from 'react-router'\r\nimport { titleClass, buttonClass } from './trainingsList'\r\nimport ModalWindow from 'components/modal_window/modalWindow'\r\nimport ExclamationSVG from 'assets/svgComponents/exclamationSVG'\r\nimport CheckCircleSVG from 'assets/svgComponents/checkCircleSVG'\r\nimport { UserAddModal } from 'components/admin/contents/insurance/AddModal'\r\nimport { useTranslation } from 'react-i18next'\r\nimport PlusSVG from 'assets/svgComponents/plusSVG'\r\nimport FormSelect from 'components/urgudul_components/formSelect'\r\nimport SearchSelect from 'components/urgudul_components/searchSelect'\r\nimport Select from 'react-select'\r\n\r\nexport default function TrainingUserRegistration() {\r\n   const [registration, setRegistration] = useState(initialState)\r\n\r\n   const handleInput = (key, value) => setRegistration(prev => ({ ...prev, [key]: value }))\r\n\r\n   const handleInputFormat = (key, values) => setRegistration(prev => ({ ...prev, [key]: values.value }))\r\n\r\n   const handleInputRegister = (key, value) => setRegistration(prev => ({ ...prev, [key]: value?.toUpperCase().slice(0, 10).replaceAll(' ', '') ?? null }))\r\n\r\n   const [sectors, setSectors] = useState([])\r\n\r\n   useEffect(() => {\r\n      axios.get('business-sector').then(res => {\r\n         setSectors(res.data.data)\r\n      })\r\n   }, [])\r\n\r\n   const [tab, setTab] = useState(true)\r\n\r\n   const handleRemoveFile = (key) => setRegistration(prev => ({ ...prev, [key]: null }))\r\n\r\n   const FilePreviewCtx = useContext(FilePreviewContext)\r\n   const AlertCtx = useContext(AlertContext)\r\n\r\n   const handleDownloadFile = (id) => {\r\n      axios.get(`attach-files/${id}`, {\r\n         headers: { Authorization: getLoggedUserToken() },\r\n         responseType: 'blob',\r\n      }).then(res => {\r\n         const URL = window.URL.createObjectURL(res.data)\r\n         FilePreviewCtx.setFile({ open: true, src: URL })\r\n      }).catch(err => {\r\n         AlertCtx.setAlert({ open: true, variant: 'error', msg: 'Файлыг татахад чадсангүй.' })\r\n      })\r\n   }\r\n\r\n   // const AnimatedFileCard = animated(FileCard)\r\n   // const AnimatedFileCardAdd = animated(FileCardAdd)\r\n\r\n   const [editKey, setEditKey] = useState()\r\n\r\n   const fileInputRef = useRef()\r\n\r\n   const handleFileClick = (key) => {\r\n      setEditKey(key)\r\n      fileInputRef.current.value = null\r\n      fileInputRef.current.click()\r\n   }\r\n\r\n   const handleFileInput = (e) => {\r\n      const formData = new FormData()\r\n      if (!e.target.files[0]) return\r\n      formData.append('file', e.target.files[0])\r\n      formData.append('description', descriptions[editKey])\r\n      setRegistration(prev => ({ ...prev, [editKey]: 'loading' }))\r\n\r\n      axios.post('attach-files', formData, {\r\n         headers: {\r\n            'Authorization': getLoggedUserToken(),\r\n            'Content-Type': 'multipart/form-data',\r\n         }\r\n      }).then(res => {\r\n         setRegistration(prev => ({ ...prev, [editKey]: res.data.data }))\r\n      }).catch(err => {\r\n         setRegistration(prev => ({ ...prev, [editKey]: null }))\r\n         AlertCtx.setAlert({ open: true, variant: 'error', msg: 'Файлыг хадгалж чадсангүй.' })\r\n      })\r\n   }\r\n\r\n   const trainingId = useParams().trainingId\r\n\r\n   const handleSubmit = () => {\r\n      setValidate(true)\r\n      const allValid = Object.keys(initialState).every(key => {\r\n         switch (key) {\r\n            case 'company_introduction_file':\r\n               if (!checkInvalid(registration.company_introduction, 'quill')) {\r\n                  return true\r\n               } else {\r\n                  return !checkInvalid(registration.company_introduction_file)\r\n               }\r\n            case 'company_introduction':\r\n               if (!checkInvalid(registration.company_introduction_file)) {\r\n                  return true\r\n               } else {\r\n                  return !checkInvalid(registration.company_introduction, 'quill')\r\n               }\r\n            default:\r\n               return !checkInvalid(registration[key], quillTypes.includes(key) && 'quill')\r\n         }\r\n      })\r\n\r\n      if (allValid !== true) {\r\n         AlertCtx.setAlert({ open: true, variant: 'normal', msg: 'Талбаруудыг гүйцэт бөглөнө үү.' })\r\n         return\r\n      }\r\n\r\n      if (trainingId !== undefined && trainingId !== null) {\r\n         axios.post(`trainings/${trainingId}/registrations`, registration)\r\n            .then(res => {\r\n               setRegisterSuccessInfo({ fullname: registration.fullname })\r\n               setModalOpenRegisterSuccess(true)\r\n               setRegistration(initialState)\r\n               setValidate(false)\r\n            }).catch(err => {\r\n               if (err.response.status === 490) {\r\n                  setModalOpenIsFull(true)\r\n                  return\r\n               }\r\n               AlertCtx.setAlert({ open: true, variant: 'error', msg: 'Танийг сургалтанд бүртгэж чадсангүй.' })\r\n            })\r\n      } else {\r\n         AlertCtx.setAlert({ open: true, variant: 'normal', msg: 'Бүртгүүлэх сургалтаа сонгоно уу.' })\r\n      }\r\n   }\r\n\r\n   const [modalOpenIsFull, setModalOpenIsFull] = useState(false)\r\n\r\n   useEffect(() => {\r\n      const timer = setTimeout(() => {\r\n         if (modalOpenIsFull === true) {\r\n            setModalOpenIsFull(false)\r\n         }\r\n      }, 3000)\r\n      return () => clearTimeout(timer)\r\n   }, [modalOpenIsFull])\r\n\r\n   const [modalOpenRegisterSuccess, setModalOpenRegisterSuccess] = useState(false)\r\n   const [registerSuccessInfo, setRegisterSuccessInfo] = useState({ fullname: '' })\r\n\r\n   const [validate, setValidate] = useState(false)\r\n\r\n   const checkInvalid = (value, type) => {\r\n      switch (value) {\r\n         case null:\r\n            return true\r\n         case '':\r\n            return true\r\n         case '<p><br></p>':\r\n            if (type === 'quill') return true\r\n            else return false\r\n         default:\r\n            return false\r\n      }\r\n   }\r\n\r\n   const [users, setUsers] = useState([])\r\n   const [addCond, setAddCond] = useState(false)\r\n   const [addCompany, setAddCompany] = useState(false)\r\n\r\n   useEffect(() => {\r\n      axios.get(`users`, {\r\n         headers: { Authorization: getLoggedUserToken() }\r\n      }).then(res => {\r\n         setUsers(res.data.data.filter(item => item.role === 'user'))\r\n      })\r\n   }, [addCond])\r\n\r\n   const handleSelect = (option) => {\r\n      setRegistration(prev => ({ ...prev, userId: option?.id ?? null }))\r\n   }\r\n\r\n   const selectedCompany = users.find(user => user.id === registration.userId)\r\n\r\n   return (\r\n      <div className=\"tw-text-gray-700 tw-text-sm tw-w-full tw-relative tw-p-2 tw-pb-12\">\r\n         <div className={titleClass}>\r\n            Сургалтанд бүртгүүлэх\r\n         </div>\r\n\r\n         <div className=\"tw-grid tw-grid-cols-1 md:tw-grid-cols-2 tw-gap-x-4 tw-place-items-start tw-mt-3\">\r\n            <FormInline label=\"Овог нэр\" type=\"text\" value={registration.fullname} name=\"fullname\" setter={handleInput} classAppend=\"tw-w-full tw-max-w-md\" classInput=\"tw-w-full\" invalid={validate && checkInvalid(registration.fullname)} />\r\n\r\n            <FormOptions label=\"Хүйс\" options={['Эрэгтэй', 'Эмэгтэй']} values={['Эрэгтэй', 'Эмэгтэй']} value={registration.gender} name=\"gender\" setter={handleInput} classAppend=\"tw-w-full tw-max-w-md\" invalid={validate && checkInvalid(registration.gender)} />\r\n\r\n            <FormInline label=\"Регистрийн дугаар\" type=\"text\" value={registration.register_number} name=\"register_number\" setter={handleInputRegister} classAppend=\"tw-w-full tw-max-w-md\" invalid={validate && checkInvalid(registration.register_number)} />\r\n\r\n            <FormInline label=\"Утасны дугаар\" type=\"numberFormat\" formats={{ format: '(+976) #### ####' }} value={registration.phone} name=\"phone\" setter={handleInputFormat} classAppend=\"tw-w-full tw-max-w-md\" classInput=\"tw-w-40\" invalid={validate && checkInvalid(registration.phone)} />\r\n\r\n            <FormInline label=\"Имэйл хаяг\" type=\"email\" value={registration.email} name=\"email\" setter={handleInput} classAppend=\"tw-w-full tw-max-w-md\" classInput=\"tw-w-full\" validate={true} invalid={validate && checkInvalid(registration.email)} />\r\n\r\n            {/* <FormInline label=\"Байгууллагын нэр\" type=\"text\" value={registration.company_name} name=\"company_name\" setter={handleInput} classAppend=\"tw-w-full tw-max-w-md\" classInput=\"tw-w-full\" invalid={validate && checkInvalid(registration.company_name)} /> */}\r\n\r\n            <FormInline label=\"Одоогийн ажлын албан тушаал\" type=\"text\" value={registration.employee_position} name=\"employee_position\" setter={handleInput} classAppend=\"tw-w-full tw-max-w-md\" classInput=\"tw-w-full\" invalid={validate && checkInvalid(registration.employee_position)} />\r\n\r\n            {/* <TreeSelect data={sectors} label=\"Ямар чиглэлээр үйл ажиллагаа явуулдаг вэ?\" displayName=\"bdescription_mon\" value={registration.business_sectorId} name=\"business_sectorId\" setter={handleInput} invalid={validate && checkInvalid(registration.business_sectorId)} /> */}\r\n\r\n            {/* <FormInline label=\"Жилийн борлуулалтын тоо хэмжээ\" type=\"numberFormat\" formats={{ thousandSeparator: true, prefix: '$ ' }} value={registration.annual_sales} name=\"annual_sales\" setter={handleInputFormat} classAppend=\"tw-w-full tw-max-w-md\" classInput=\"tw-w-40\" invalid={validate && checkInvalid(registration.annual_sales)} /> */}\r\n\r\n            <div className=\"tw-col-span-2 tw-pt-6 tw-px-3 tw-pb-3 tw-flex tw-flex-col tw-gap-y-3\">\r\n               <div className={validate && checkInvalid(registration.userId) && 'tw-text-red-500 tw-transition-colors'}>\r\n                  Та өөрийн ажилладаг байгууллагаа сонгоно уу.\r\n               </div>\r\n               <div className=\"tw-flex tw-items-center tw-gap-x-5\">\r\n                  <Select\r\n                     isClearable\r\n                     menuPortalTarget={document.body}\r\n                     styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n                     options={users}\r\n                     value={registration.companyregister}\r\n                     getOptionValue={option => option.companyregister}\r\n                     onChange={handleSelect}\r\n                     getOptionLabel={option => `${option.companyregister}, ${option.companyname}`}\r\n                     placeholder=\"Сонгох ...\"\r\n                     className=\"tw-flex-grow tw-max-w-xs\"\r\n                     theme={theme => ({\r\n                        ...theme,\r\n                        colors: {\r\n                           ...theme.colors,\r\n                           primary: '#3B82F6',\r\n                           neutral20: '#9CA3AF'\r\n                        }\r\n                     })}\r\n                  />\r\n                  <PlusSVG className=\"tw-w-9 tw-h-9 tw-cursor-pointer tw-border tw-border-gray-400 tw-rounded tw-p-2 tw-flex-shrink-0 tw-text-gray-400 active:tw-border-gray-600 active:tw-text-gray-600 tw-transition-colors hover:tw-shadow-md tw-transition-shadow\" strokeWidth={3} onClick={() => setAddCompany(true)} />\r\n                  {addCompany &&\r\n                     <UserAddModal setAddCond={setAddCond} setAddCompany={setAddCompany} />\r\n                  }\r\n               </div>\r\n               {selectedCompany\r\n                  ? <div className=\"tw-text-gray-500\">\r\n                     <div className=\"\">\r\n                        <span className=\"tw-mr-2\">Байгууллагын нэр:</span>\r\n                        <span className=\"tw-font-medium tw-text-13px\">{selectedCompany.companyname}</span>\r\n                     </div>\r\n                     <div className=\"\">\r\n                        <span className=\"tw-mr-2\">Салбар:</span>\r\n                        <span className=\"tw-font-medium tw-text-13px\">{sectors.find(sector => sector.id === selectedCompany.business_sectorId)?.bdescription_mon}</span>\r\n                     </div>\r\n                     <div className=\"\">\r\n                        <span className=\"tw-mr-2\">Байршил:</span>\r\n                        <span className=\"tw-font-medium tw-text-13px\">{selectedCompany.location_detail}</span>\r\n                     </div>\r\n                  </div>\r\n                  : <div className=\"tw-text-gray-500 tw-italic\">\r\n                     Байгууллагын регистрийн дугаар оруулж байгууллага сонгоно. Хэрэв олдоогүй бол хажуугийн товчоор нэмэх боломжтой.\r\n                  </div>\r\n               }\r\n            </div>\r\n\r\n            <FormRichText\r\n               label=\"Манай сургалтад хамрагдах нь танд ямар ашиг тустай вэ? Энэхүү сургалтаас ямар үр дүн хүлээж байгаа вэ?\"\r\n               invalid={validate && checkInvalid(registration.training_benefit, 'quill')}\r\n               modules=\"small\"\r\n               value={registration.training_benefit}\r\n               name=\"training_benefit\"\r\n               setter={handleInput}\r\n               classAppend=\"tw-w-full md:tw-col-span-2 tw-pl-3 tw-pt-1\"\r\n            />\r\n\r\n            {/* <div className=\"tw-w-full md:tw-col-span-2\">\r\n               <div className=\"tw-flex tw-items-end tw-text-13px tw-mt-5 tw-mb-2\">\r\n                  <span className=\"tw-border-b tw-border-gray-400 tw-ml-3 tw-pl-1 tw-pr-4 tw-font-light tw-pb-0.5\">\r\n                     Байгууллагын танилцуулга:\r\n                  </span>\r\n                  <button className={tab ? classActiveTab : classInactiveTab} onClick={() => setTab(true)}>\r\n                     Файлаар\r\n                  </button>\r\n                  <button className={tab ? classInactiveTab : classActiveTab} onClick={() => setTab(false)}>\r\n                     Бичихээр\r\n                  </button>\r\n                  <span className=\"tw-flex-grow tw-border-b tw-border-gray-400 tw-mr-3\" />\r\n               </div>\r\n\r\n               <Transition\r\n                  items={tab}\r\n                  from={{ opacity: 0, height: 'auto' }}\r\n                  enter={{ opacity: 1, height: 'auto' }}\r\n                  leave={{ display: 'none' }}>\r\n                  {item => item\r\n                     ? anims =>\r\n                        <animated.div className=\"tw-overflow-y-hidden\" style={anims}>\r\n                           <FormLabel classAppend=\"tw--mt-3\" label=\"Та доорх хэсэгт өөрийн ажиллаж буй байгууллагын танилцуулгыг хавсаргана уу.\" invalid={checkInvalid(registration.company_introduction, 'quill') && validate && checkInvalid(registration.company_introduction_file)} />\r\n                           <div className=\"tw-h-28 tw-pl-8 tw-mt-3\">\r\n                              <Transition\r\n                                 items={registration.company_introduction_file}\r\n                                 from={{ transform: 'scale(0)' }}\r\n                                 enter={{ transform: 'scale(1)' }}\r\n                                 leave={{ display: 'none' }}>\r\n                                 {item1 => item1\r\n                                    ? anims1 => <FileCard name={item1?.name} type={item1?.mimetype} size={item1?.size} classAppend=\"\" uploading={item1 === 'loading' && true} removeFile={() => handleRemoveFile('company_introduction_file')} downloadFile={() => handleDownloadFile(item1.id)} style={anims1} />\r\n                                    : anims1 => <FileCardAdd classAppend=\"\" onClick={() => handleFileClick('company_introduction_file')} style={anims1} />\r\n                                 }\r\n                              </Transition>\r\n                           </div>\r\n                        </animated.div>\r\n                     : anims =>\r\n                        <animated.div className=\"tw-overflow-y-hidden\" style={anims}>\r\n                           <FormRichText\r\n                              label=\"Та доорх хэсэгт өөрийн ажиллаж буй байгууллагын танилцуулгыг бичнэ үү.\"\r\n                              invalid={checkInvalid(registration.company_introduction_file) && validate && checkInvalid(registration.company_introduction, 'quill')}\r\n                              modules=\"small\"\r\n                              value={registration.company_introduction}\r\n                              name=\"company_introduction\"\r\n                              setter={handleInput}\r\n                              classAppend=\"tw-pl-3 tw--mt-1\"\r\n                           />\r\n                        </animated.div>\r\n                  }\r\n               </Transition>\r\n            </div> */}\r\n\r\n            {/* <div className=\"\">\r\n               <FormLabel classAppend=\"tw-mt-4\" label=\"Та доорх хэсэгт ажилтнаа сургалтад хамруулах тухай байгууллагын хүсэлт, албан тоотыг хавсаргана уу.\" invalid={validate && checkInvalid(registration.company_request_file)} />\r\n               <div className=\"tw-h-20 tw-pl-8 tw-mt-3\">\r\n                  <Transition\r\n                     items={registration.company_request_file}\r\n                     from={{ transform: 'scale(0)' }}\r\n                     enter={{ transform: 'scale(1)' }}\r\n                     leave={{ display: 'none' }}>\r\n                     {item1 => item1\r\n                        ? anims1 => <FileCard name={item1?.name} type={item1?.mimetype} size={item1?.size} classAppend=\"\" uploading={item1 === 'loading' && true} removeFile={() => handleRemoveFile('company_request_file')} downloadFile={() => handleDownloadFile(item1.id)} style={anims1} />\r\n                        : anims1 => <FileCardAdd classAppend=\"\" onClick={() => handleFileClick('company_request_file')} style={anims1} />\r\n                     }\r\n                  </Transition>\r\n               </div>\r\n            </div> */}\r\n\r\n            <div className=\"tw-col-span-2\">\r\n               <FormLabel classAppend=\"tw-mt-4\" label=\"Та доорх хэсэгт иргэний үнэмлэхний хуулбарыг хавсаргана уу.\" invalid={validate && checkInvalid(registration.register_file)} />\r\n               <div className=\"tw-h-20 tw-pl-8 tw-mt-3\">\r\n                  <Transition\r\n                     items={registration.register_file}\r\n                     from={{ transform: 'scale(0)' }}\r\n                     enter={{ transform: 'scale(1)' }}\r\n                     leave={{ display: 'none' }}>\r\n                     {item1 => item1\r\n                        ? anims1 => <FileCard name={item1?.name} type={item1?.mimetype} size={item1?.size} classAppend=\"\" uploading={item1 === 'loading' && true} removeFile={() => handleRemoveFile('register_file')} downloadFile={() => handleDownloadFile(item1.id)} style={anims1} />\r\n                        : anims1 => <FileCardAdd classAppend=\"\" onClick={() => handleFileClick('register_file')} style={anims1} />\r\n                     }\r\n                  </Transition>\r\n               </div>\r\n            </div>\r\n         </div>\r\n\r\n         <input className=\"tw-invisible tw-absolute tw-w-0 tw-h-0\" type=\"file\" accept=\".pdf, image/*, .doc, .docx\" onChange={handleFileInput} ref={fileInputRef} />\r\n\r\n         <div className=\"tw-flex tw-justify-end\">\r\n            <button\r\n               className={`${buttonClass} tw-text-sm tw-px-4 tw-m-4 tw-mt-8`}\r\n               onClick={handleSubmit}>\r\n               Бүртгүүлэх\r\n            </button>\r\n         </div>\r\n\r\n         <ModalWindow modalOpen={modalOpenIsFull} setModalOpen={setModalOpenIsFull} modalAppend=\"tw-p-5\">\r\n            <div className=\"tw-px-4 tw-pt-4 tw-pb-2 tw-font-medium tw-text-base tw-flex tw-items-center tw-justify-center\">\r\n               Уучлаарай\r\n               <ExclamationSVG className=\"tw-w-6 tw-h-6 tw-text-red-500 tw-ml-1\" />\r\n            </div>\r\n            <div className=\"tw-font-medium tw-py-4 tw-px-4\">\r\n               Бүртгэл дүүрсэн байна.\r\n            </div>\r\n         </ModalWindow>\r\n\r\n         <ModalWindow modalOpen={modalOpenRegisterSuccess} setModalOpen={setModalOpenRegisterSuccess} modalAppend=\"tw-p-5 tw-max-w-sm\">\r\n            <div className=\"tw-px-4 tw-pt-4 tw-pb-2 tw-font-medium tw-text-base tw-flex tw-items-center tw-justify-center\">\r\n               Бүртгэл хийгдлээ\r\n               <CheckCircleSVG className=\"tw-w-6 tw-h-6 tw-text-green-500 tw-ml-1\" />\r\n            </div>\r\n            <div className=\"tw-font-medium tw-py-4 tw-px-4 tw-text-center\">\r\n               {registerSuccessInfo.fullname} танийг сургалтанд бүртгэлээ. Та имэйлээ шалгана уу, баярлалаа.\r\n            </div>\r\n         </ModalWindow>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst initialState = {\r\n   fullname: null,\r\n   gender: null,\r\n   register_number: null,\r\n   phone: null,\r\n   email: null,\r\n   // company_name: null,\r\n   employee_position: null,\r\n   // business_sectorId: null,\r\n   // annual_sales: null,\r\n   training_benefit: null,\r\n   // company_introduction: null,\r\n   // company_introduction_file: null,\r\n   // company_request_file: null,\r\n   userId: null,\r\n   register_file: null,\r\n}\r\n\r\nexport const FormLabel = ({ label, classAppend, HelpPopup, invalid }) => (\r\n   <div className={`tw-flex tw-items-center tw-pl-3 tw-pt-4 ${classAppend ?? ''}`}>\r\n      <span className={`tw-text-sm tw-transition-colors tw-leading-tight ${invalid && 'tw-text-red-500'} tw-transition-colors`}>\r\n         {label}\r\n      </span>\r\n      {HelpPopup && HelpPopup}\r\n   </div>\r\n)\r\n\r\nconst descriptions = {\r\n   company_introduction_file: 'Cургалтанд бүртгүүлэгчийн байгууллагын танилцуулга.',\r\n   company_request_file: 'Cургалтанд бүртгүүлэгчийн ажилтнаа сургалтад хамруулах тухай байгууллагын хүсэлт, албан тоот.',\r\n   register_file: 'Cургалтанд бүртгүүлэгчийн иргэний үнэмлэхний хуулбар.',\r\n}\r\n\r\nconst classActiveTab = 'tw-rounded-t-lg tw-border-l tw-border-t tw-border-r tw-border-gray-400 tw-px-2 tw-pb-0.5 tw-pt-1.5 focus:tw-outline-none'\r\nconst classInactiveTab = 'tw-font-light tw-rounded-t-lg tw-border-b tw-border-gray-400 tw-px-2 tw-pb-0.5 tw-pt-1.5 focus:tw-outline-none tw-bg-gray-200'\r\n\r\nconst quillTypes = ['training_benefit', 'company_introduction']\r\n",{"ruleId":"24","severity":1,"message":"25","line":5,"column":8,"nodeType":"26","messageId":"27","endLine":5,"endColumn":18},{"ruleId":"24","severity":1,"message":"28","line":7,"column":10,"nodeType":"26","messageId":"27","endLine":7,"endColumn":18},{"ruleId":"24","severity":1,"message":"29","line":19,"column":10,"nodeType":"26","messageId":"27","endLine":19,"endColumn":24},{"ruleId":"24","severity":1,"message":"30","line":21,"column":8,"nodeType":"26","messageId":"27","endLine":21,"endColumn":18},{"ruleId":"24","severity":1,"message":"31","line":22,"column":8,"nodeType":"26","messageId":"27","endLine":22,"endColumn":20},{"ruleId":"24","severity":1,"message":"32","line":42,"column":11,"nodeType":"26","messageId":"27","endLine":42,"endColumn":14},{"ruleId":"24","severity":1,"message":"33","line":42,"column":16,"nodeType":"26","messageId":"27","endLine":42,"endColumn":22},{"ruleId":"24","severity":1,"message":"34","line":426,"column":7,"nodeType":"26","messageId":"27","endLine":426,"endColumn":21},{"ruleId":"24","severity":1,"message":"35","line":427,"column":7,"nodeType":"26","messageId":"27","endLine":427,"endColumn":23},"no-unused-vars","'TreeSelect' is defined but never used.","Identifier","unusedVar","'animated' is defined but never used.","'useTranslation' is defined but never used.","'FormSelect' is defined but never used.","'SearchSelect' is defined but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","'classActiveTab' is assigned a value but never used.","'classInactiveTab' is assigned a value but never used."]